# Generated by Django 3.1.4 on 2020-12-14 01:57

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MatchDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField(blank=True, default=12345)),
                ('gameweek', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(38)])),
                ('game_week_points', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('points_total', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)])),
                ('team_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(2000)])),
                ('game_week_transfers', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('game_week_transfers_cost', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('bench_points', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Chart_Position')),
                ('artist', models.CharField(max_length=200)),
                ('song_title', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='YoutubeVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_title', models.CharField(max_length=500)),
                ('video_id', models.CharField(max_length=50)),
                ('video_description', models.TextField()),
                ('upload_date', models.DateTimeField()),
                ('video_thumbnail', models.CharField(max_length=300)),
                ('playlist_id', models.CharField(max_length=50)),
                ('channel_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='YoutubePlaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_name', models.CharField(max_length=200)),
                ('playlist_id', models.TextField(max_length=35)),
                ('playlist_videos', models.ManyToManyField(blank=True, to='kach_api_endpoints.YoutubeVideo')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=150)),
                ('player_id', models.IntegerField()),
                ('points_total', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('transfers_total', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(570)])),
                ('current_gameweek', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(38)])),
                ('matches', models.ManyToManyField(blank=True, to='kach_api_endpoints.MatchDay')),
            ],
        ),
    ]
